<html  style="height:fit-content"><head>
</head><body style="height:fit-content">
<svg xmlns="http://www.w3.org/2000/svg" version="1.1" style="border:1px none silver ; height : 100px" fill="white" stroke="black" stroke-width="2" font-size="20" text-anchor="middle">
   
<style type="text/css">
	#group3 { transition: all 700ms linear }
	#group3:has(+g:not(.loaded)) { transform : translate( 0, 100px ) }
	circle { fill : white }
	circle[ controls ] { stroke : green }
	circle[ controls ]:not( .loaded ) { fill : #efe }
	g.fragment > g { transition: all 700ms linear }
	g.fragment:not(.loaded) > line { transform : scale( 0 ) }
	g.fragment:not(.loaded) > g { transform : translate( 0, 0 ) }
	g.level-indicator > line { stroke : gray ; stroke-width: 1 }
	g.level-indicator > text { font-size : 14px ; text-anchor : start }
	line { transition : all 0.7s linear }
	svg { transition : height 0.7s linear }
	text { fill:black ; stroke:none ; alignment-baseline:central }
	</style>
	
<defs>
	<marker id="DartArrow" style="overflow:visible" refX="0" refY="0" orient="auto-start-reverse" markerWidth="1" markerHeight="1" viewBox="0 0 1 1" preserveAspectRatio="xMidYMid">
		<path id="path6" style="fill:context-stroke; stroke:none" d="M 0,0 5,-5 -12.5,0 5,5 Z" transform="scale(-0.5)" />
		</marker>
	</defs>

<g transform="scale(0.6) translate(150, 30)" >
	<g class="level-indicator">
		<line x1="-130" x2="150" />
		<text x="160">Level 0</text>
		</g>
	<g class="level-indicator" transform="translate(0, 100)">
		<line x1="-130" x2="150" />
		<text x="160">Level 1</text>
		</g>
	<g class="level-indicator" transform="translate(0, 200)">
		<line x1="-130" x2="150" />
		<text x="160">Level 2</text>
		</g>
	<g class="level-indicator" transform="translate(0, 300)">
		<line x1="-130" x2="150" />
		<text x="160">Level 3</text>
		</g>
	<g id="group3" class="fragment" transform="translate(0, 200)">
		<line x2="-100" y2="100" />
		<line y2="100" />
		<line x2="100" y2="100" />
		<g transform="translate(-100, 100)">
			<circle r="20"/>
			<text>6</text>
			</g>
		<g transform="translate(0, 100)">
			<circle r="20"/>
			<text>7</text>
			</g>
		<g transform="translate(100, 100)">
			<circle r="20"/>
			<text>8</text>
			</g>
		</g>
	<g id="group2" class="fragment" transform="translate( 0, 100)">
		<line x2="-100" y2="100" />
		<line y2="100" />
		<line x2="100" y2="100" />
		<g transform="translate(-100, 100)">
			<circle r="20"/>
			<text>4</text>
			</g>
		<g transform="translate(0, 100)">
			<circle r="20" controls="group3" />
			<text>5</text>
			</g>
		<g transform="translate(100, 100)">
			<circle r="20"/>
			<text>9</text>
			</g>
		</g>

	<g id="group1" class="fragment loaded" transform="translate( 0, 0)">
		<line x2="-100" y2="100" />
		<line y2="100" />
		<line x2="100" y2="100" />
		<g transform="translate(0, 0)">
			<circle r="20"/>
			<text>1</text>
			</g>
		<g transform="translate(-100, 100)">
			<circle r="20"/>
			<text>2</text>
			</g>
		<g transform="translate(0, 100)">
			<circle r="20" controls="group2"/>
			<text>3</text>
			</g>
		<g transform="translate(100, 100)">
			<circle r="20"/>
			<text>10</text>
			</g>
		</g>

	<g stroke="#efbd5a" marker-start="url(#DartArrow)" display="none" >
		<path id="path14" d="M -96.498165,168.77096 C -88.801573,143.21855 -55.065144,110.59952 -20,100" />
		<path id="path15" d="m 121.60295,177.38021 c 16.8798,-18.09106 17.32711,-50.13614 -3.28093,-71.06676" />
		</g>
</g>

<script type="text/javascript">
( function ( ) {
const svgroot = document.currentScript.parentElement ;
// Find group controllers and add click event handler
for ( const circle of svgroot.querySelectorAll( "[controls]" )) {
	circle.parentElement.addEventListener( "click" , evt => {
		const circle = evt.currentTarget.querySelector( "circle" );
		// Toggle group controller state
		circle.classList.toggle( "loaded" );
		const group = circle.getAttribute( "controls" );
		svgroot.getElementById( group ).classList.toggle( "loaded" );
		// calculate the svg element height
		const n = svgroot.querySelectorAll( ".fragment:not(.loaded)" )?.length || 0 ;
		svgroot.style.height = 220 - n * 60;
		// svgroot.setAttribute( "viewBox", `-150 -30 500 ${380 - n * 100}` );
		} ) ;
	}
} ) ( ) ;
 </script>
</svg>
</body></html>
