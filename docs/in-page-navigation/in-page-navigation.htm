<!DOCTYPE html>
<html lang="en-US"><head>
<meta charset="utf-8">
<meta name="viewport" content="width=device-width, initial-scale=1.0">
<meta name="template-info" file-name="empty.htm" version="2024-08-07" editor="USP" />
<meta name="author" content="USP" />
<meta name="creation-date" content="2024-10-01" />
<meta name="editor" content="USP" />
<meta name="change-date" content="2024-10-06" />
<meta name="version" content="1" />
<meta name="sectionTitle" content="../title.svg" />

<link rel="icon" type="image/svg+xml" href="/favicon.svg" sizes="all" />
<link rel="stylesheet" href="/inc/web-cat/page-structure/tutorial-page-1.css" />
<script type="module" src="/inc/web-cat/page-structure/tutorial-page-1.js" ></script>
 
<meta name="categories" content="Projects > Web > Content Authoring Toolbox" />
<meta name="tags" content="web, content, autoring, toolbox, HTML, JavaScript, CSS, WebCAT, component, scrolling, heading, in-page, navigation, jump." />
<meta name="description" content="This component provides functions for quick navigation between elements on the page." />

<title>Web > Content Authoring Toolbox > In-Page Navigation</title>

</head><body>

<h1>In-Page Navigation</h1>

<p id="pageAbstract"></p>

<p>The functions inside are used in the related toolbar buttons <tt>Up</tt>, <tt>Down</tt>, <tt>Top</tt> and <tt>Bottom</tt>.</p>

<p>The functions <tt>scrollToNextTarget()</tt> and <tt>scrollToPreviousTarget()</tt> sroll the document to the next or previous heading elements. The functions <tt>scrollToTopOfPage()</tt> and <tt>scrollToBottomOfPage()</tt> are useful in large documents.</p>

<figure class="demo"><figcaption>In-page navigation demo (<a href="in-page-navigation-demo.htm">in-page-navigation-demo.htm</a>)</figcaption>
<iframe style="width:100%" src="demo-1.htm"></iframe>
</figure>

<h2 cbc>Usage</h2><div>

<p>Step 1 : Import the script file:</p>

<figure class="listing"><figcaption>Importing the component's script module</figcaption>
<pre>
&lt;script type="module"&gt;
import * as inPageNavigator from "path/to/<hi>in-page-navigation.js</hi>?scroll-margin-top=30" ;
...
&lt;/script&gt;
</pre></figure>

<p>Step 2:  Register event handlers with some suitable UI elements:</p>

<figure class="listing"><figcaption>Importing the component's script module</figcaption>
<pre>
buttonPrevious.addEventListener( "click" , inPageNavigator.<hi>scrollToPreviousTarget</hi> );
buttonNext.addEventListener( "click" , inPageNavigator.<hi>scrollToNextTarget </hi>);
buttonTopOfPage.addEventListener( "click" , inPageNavigator.<hi>scrollToTopOfPage</hi> );
buttonBottomOfPage.addEventListener( "click" , inPageNavigator.<hi>scrollToBottomOfPage</hi> );
</pre></figure>

<p>You can specify the top scrolling offset in the query string of the module URL:</p>

<figure class="listing"><figcaption>Specifying the top scrolling offset</figcaption>
<pre>
path/to/in-page-navigation.js?<hi>scroll-margin-top=30</hi>" ;
</pre></figure>

<p>If that parameter is omitted, the previous sibling of the <tt>MAIN</tt> element (usually the toolbar) determines that value. If there is none, a value of 0 is assumed.</p>

<p>You can specify the selector string and the container element: </p>

<figure class="listing"><figcaption>Specifying container and selector</figcaption>
<pre>
path/to/in-page-navigation.js?<hi>selector=H2,H3,H4&container=elementID</hi>" ;
</pre></figure>

<p>The default selector string is "H1,H2,H3,H4,H5". The default container is the MAIN element, or the document.</p>

<p>If the number of scrolling targets can change (for example by dynamically loaded content), add these parameters:</p>

<figure class="listing"><figcaption>Delayed initialization</figcaption>
<pre>
path/to/in-page-navigation.js?<hi>init-event-name=fragment-loading-complete</hi>&<hi>keep-init-handler</hi>" ;
</pre></figure>

<p>The configuration can be tweaked, the settings object is accessible from outside. The module's <tt>init()</tt> function initializes these members, but the host document can tweak the members.</p>

<figure class="listing"><figcaption>Settings</figcaption>
<pre>
export const settings = {
	scrollMarginTop : undefined ,  <cc>// compensation for toolbars and other sticky content</cc>
	container : undefined ,  <cc>// reference to the container that holds the scroll targets</cc>
	selector : undefined ,  <cc>// Defines which elements can be jumped to</cc>
	scrollTargets : undefined  <cc>// list of heading elements in the main content container</cc>
	} ;
</pre></figure>

<!--h2--Usage--></div>

<h2 cbc>Module Configuration</h2><div>

<p>Module script parameters are passed in the query string of the script URL, as described in <a href="../component-anatomy.htm#passing-parameters">Anatomy of a WebCAT Component</a>.</p>

<dl>
<dt><tt>monitor-fragment-loading-complete</tt></dt><dd>
	<p>If present, an event listener is attached to the <tt>document</tt> that re-compiles the list of scroll targets (headings).</p>
	</dd>
<dt><tt>scroll-margin-top=number</tt></dt><dd>
	<p>Sets the top scroll margin to the specified number of pixels. Useful if there is no <tt>scroll-margin-provider</tt> available.</p>
	</dd>
</dl>

<!--h2--Module Configuration--></div>

<h2 cbc>Background Information</h2><div>

<p>The component collaborates with the <a href="../scroll-margin-provide/scroll-margin-provider.htm"><tt>scroll-margin-provider</tt></a>, which provides top and bottom scroll margins if there are toolbars on the page.</p>

<!--h2--Background Information--></div>

<h2 cbc>Implementation</h2><div>

<p>TODO</p>

<h3 cbc>ScrollToPreviousTarget()</h3><div>

<p>The function scrolls the document to the first scroll target element that is located above the toolbar bottom border. The elements are inspected in reverse order, from bottom to top.</p>

<figure class="listing"><figcaption>Scrolling to the previous target</figcaption>
<pre>
export function scrollToPreviousTarget ( ) {
	if ( ! settings.scrollTargets ) settings.scrollTargets = document.querySelectorAll( settings.selector );
	for ( let i = settings.scrollTargets.length - 1 ; i >= 0 ; i -= 1 ) {
		const heading = settings.scrollTargets[ i ];
		if ( <hi>heading.getBoundingClientRect( ).top < 0</hi>  ) {
			<hi>document.documentElement.scroll</hi>( { top : heading.offsetTop - settings.scrollMarginTop , behavior : "smooth"  } ) ;
			return;
	}	}	}
</pre></figure>

<!--h3--ScrollToPreviousTarget()--></div>

<h3 cbc>References</h3><div>

<dl class="link-list">
<dt><a href="https://developer.mozilla.org/en-US/docs/Web/API/Window/innerHeight">Window: innerHeight property</a> on MDN</dt><dd>
	<p>Information about layout viewport, clientHeight</p></dd>
<dt><a href="https://developer.mozilla.org/en-US/docs/Web/API/HTMLHtmlElement">HTMLHtmlElement</a></dt><dd>
	<p>The root node of an HTML document.</p></dd>
<dt><a href="https://developer.mozilla.org/en-US/docs/Web/API/Element/getBoundingClientRect">getBoundingClientRect()</a></dt><dd>
	<p>Retrieves position and size of an element.</p></dd>
<dt><a href="https://developer.mozilla.org/en-US/docs/Glossary/Viewport">Viewport</a></dt><dd>
	<p>Contains the visible part of a document.</p></dd>
<dt><a href="https://developer.mozilla.org/en-US/docs/Web/API/Visual_Viewport_API">Visual Viewport</a></dt><dd>
	<p>The visible part of the layout viewport.</p></dd>
</dl>

<!--h3--References--></div>

<!--h2--Implementation--></div>

</body></html>