<!DOCTYPE html>
<html lang="en-US"><head>
<meta charset="utf-8">
<meta name="viewport" content="width=device-width, initial-scale=1.0">
<meta name="template-info" file-name="empty.htm" version="2024-09-15" editor="USP" />
<meta name="author" content="USP" />
<meta name="creation-date" content="2024-10-01" />
<meta name="editor" content="USP" />
<meta name="change-date" content="2024-10-01" />
<meta name="version" content="1" />
<meta name="sectionTitle" content="../title.svg" />

<link rel="icon" type="image/svg+xml" href="/favicon.svg" sizes="all" />
<link rel="stylesheet" href="/inc/web-cat/page-structure/demo-page-1.css" />
<script type="module" src="/inc/web-cat/page-structure/demo-page-1.js" ></script>

<meta name="categories" content="Projects > Web > Content Authoring Toolbox" />
<meta name="tags" content="web, content, authoring, toolbox, HTML, JavaScript, CSS, WebCAT, component" />
<title>Web > Content Authoring Toolbox > </title>
<meta name="description" content="" />

</head><body>

<h1 class="hide-if-hosted">Promise Study 2</h1>

<a data-load-fragment href="fragment-1.htm"></a>

<script type="module">
function loadFragments( root ) {
	const promises = [ ] ;
	for ( const anchor of root.querySelectorAll( "a[data-load-fragment]" )) {
		const localAnchor = anchor;
		promises.push ( fetch ( anchor.href )
		.then( response => response.ok ? response.text( ) : "not found" )
		.then( text => { 
			const template = document.createElement( "TEMPLATE" );
			template.innerHTML = text ;
			const elements = Array.from( template.content.children );
			localAnchor.replaceWith( ...elements );
			return elements;
			} ) 
		.then ( elements => { 
			const promises = [ ] ;
			for ( const element of elements ) promises.push( loadFragments( element ));
			return promises;
			} )
		) }
	return Promise.allSettled( promises );
	}

loadFragments( document.body )
.then ( results => console.log( results ));
</script>

</body></html>